### The hosts block
- hosts: '{{ playbook_targets }}'
  gather_facts: true
  become: true
  ### The vars block  
  vars:
    var1: value1
    var2: value2
    var3: value3
    var4: |-
      This is a multi-line value
      of type string
    var5:
      - listvalue1
      - listvalue2
      - listvalue3
      - listvalue4
    var6:
      some_key:
        some_child_key: dictvalue1
    var7: $(echo some_value)
    dbhosts:
      - dbhost1
      - dbhost2
      - dbhost3
    webhosts:
      - webhost1
      - webhost2
      - webhost3
    ### The commands block
    commands:
      run:
        options:
          required:
            -f|--foo: some_foo_variable ## This is some foo option
            -b|--bar: some_bar_variable ## This is some bar option
            -t|--targets: playbook_targets ## Playbook targets
            -a|--all-else: [remaining_args] ## (behaves like [click](https://github.com/pallets/click)'s variadic arguments (nargs=\*)), this option will 'eat' up all remaining commandline arguments
            --some-switch: some_switch ## (behaves like [click](https://github.com/pallets/click) switches, holds the value of True if specified), this is some boolean option
          optional:
            -A: hello ## Invoke the 'hello' shell function
            -B: goodbye ## Invoke the 'goodbye' shell function
            --debug-mode: debug_mode ## Enable debug logging
        ### The help message
        help:
          message: |
            Invoke the 'run' command 
          epilog: |
            This line will be displayed at the end of the help text message
          examples:
            - example1: |
                tasks $command
            - example2: |
                Usage example 2
        ### Embedded shell functions
        functions:
          hello:
            shell: bash
            help: Say hello
            source: |-
              echo Hello! The value for var1 is $var1
          goodbye:
            shell: bash
            help: Say goodbye
            source: |-
              echo The value for var1 is $var1. Goodbye!
    ### The embedded inventory expression              
    inventory: |
      [local]
      localhost ansible_connection=local
      [web-hosts]
      $(echo -e "${webhosts}" | tr ',' '\n')
      [db-hosts]
      $(echo -e "${dbhosts}" | tr ',' '\n')
      [myhosts:children]
      web-hosts
      db-hosts            
  tasks:
    - debug: 
        msg: |
          Hello from Ansible!
          You specified the following variables: 
          - foo: {{ some_foo_variable }}
          - bar: {{ some_bar_variable }}
          - all_else: {{ remaining_args }}
          